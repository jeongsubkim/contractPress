{"ast":null,"code":"/**\n * {\n *  name : 日本語名\n *  required : 必須項目\n *  requiredCondition : 条件府必須項目の関数\n *  type : バリデーションタイプ\n *  digits : 桁数\n *  element : 入力エレメント(select, text, checkbox, radio, textarea)\n *  isChild : 下部オブジェクト\n *  excludeBlank : 下部オブジェクトの値が何もない場合除外\n * }\n */\n\nexport const ErrorCollector = {\n  init: function (tableArr) {\n    var result = {};\n    for (var i = 0; i < tableArr.length; i++) {\n      result[tableArr[i]] = this.makeValidObject(tableArr[i]);\n    }\n    console.log(result);\n  },\n  makeValidObject: function (beanName) {\n    var bean = this[beanName];\n    console.log(bean);\n    Object.keys(bean).forEach(function (key) {\n      var newBean = bean[key];\n      if (bean.required === 'condition') {} else if (bean.required) {} else if (!bean.required) {}\n      console.log(key, bean[key]);\n    });\n  },\n  MTable: {\n    tableName: {\n      name: 'テーブル名 - 論理名',\n      required: true,\n      digits: 30,\n      element: 'text'\n    },\n    tableNameJp: {\n      name: 'テーブル名 - 物理名',\n      required: true,\n      type: 'eng',\n      digits: 30,\n      element: 'text'\n    },\n    tableComment: {\n      name: 'コメント',\n      digits: 80,\n      element: 'text'\n    },\n    mTableColumn: {\n      isChild: 'MTableColumn',\n      excludeBlank: true\n    }\n  },\n  MTableColumn: {\n    tableColumnName: {\n      name: 'コラム - 論理名',\n      required: true,\n      digits: 30,\n      element: 'text'\n    },\n    tableColumnNameJp: {\n      name: 'コラム - 物理名',\n      required: true,\n      digits: 30,\n      type: 'eng',\n      element: 'text'\n    },\n    tableColumnType: {\n      name: 'コラム - タイプ',\n      required: true,\n      element: 'select'\n    },\n    tableColumnDigits: {\n      name: 'コラム - 桁数',\n      required: 'condition',\n      requiredCondition: function (columnType) {\n        if (columnType === '') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      type: 'number',\n      digits: 4,\n      element: 'text'\n    },\n    tableColumnIsPk: {\n      element: 'checkbox'\n    },\n    tableColumnIsFk: {\n      element: 'checkbox'\n    },\n    tableColumnIsNn: {\n      element: 'checkbox'\n    },\n    tableColumnIsAi: {\n      element: 'checkbox'\n    },\n    tableColumnDefault: {\n      name: 'コラム - デフォルト',\n      digits: 40,\n      element: 'text'\n    }\n  }\n};","map":{"version":3,"names":["ErrorCollector","init","tableArr","result","i","length","makeValidObject","console","log","beanName","bean","Object","keys","forEach","key","newBean","required","MTable","tableName","name","digits","element","tableNameJp","type","tableComment","mTableColumn","isChild","excludeBlank","MTableColumn","tableColumnName","tableColumnNameJp","tableColumnType","tableColumnDigits","requiredCondition","columnType","tableColumnIsPk","tableColumnIsFk","tableColumnIsNn","tableColumnIsAi","tableColumnDefault"],"sources":["C:/Users/N22082302/react-cap/jstest/react/cap-react/src/admin/common/ErrorCollector.js"],"sourcesContent":["/**\n * {\n *  name : 日本語名\n *  required : 必須項目\n *  requiredCondition : 条件府必須項目の関数\n *  type : バリデーションタイプ\n *  digits : 桁数\n *  element : 入力エレメント(select, text, checkbox, radio, textarea)\n *  isChild : 下部オブジェクト\n *  excludeBlank : 下部オブジェクトの値が何もない場合除外\n * }\n */\n\nexport const ErrorCollector = {\n    init : function(tableArr){\n        var result = {};\n        for(var i = 0; i < tableArr.length; i++){\n            result[tableArr[i]] = this.makeValidObject(tableArr[i]);\n        }\n        console.log(result);\n    },\n    makeValidObject : function(beanName){\n        var bean = this[beanName];\n        console.log(bean);\n        Object.keys(bean).forEach(function(key){\n            var newBean = bean[key];\n            if(bean.required === 'condition'){\n\n            }else if(bean.required){\n\n            }else if(!bean.required){\n\n            }\n            console.log(key, bean[key]);\n        })\n    },\n    MTable : {\n        tableName : {\n            name : 'テーブル名 - 論理名',\n            required : true,\n            digits : 30,\n            element : 'text'\n        },\n        tableNameJp : {\n            name : 'テーブル名 - 物理名',\n            required : true,\n            type : 'eng',\n            digits : 30,\n            element : 'text'\n        },\n        tableComment : {\n            name : 'コメント',\n            digits : 80,\n            element : 'text'\n        },\n        mTableColumn : {\n            isChild : 'MTableColumn',\n            excludeBlank : true\n        }\n    },\n    MTableColumn : {\n        tableColumnName: {\n            name : 'コラム - 論理名',\n            required : true,\n            digits : 30,\n            element : 'text'\n        },\n        tableColumnNameJp: {\n            name : 'コラム - 物理名',\n            required : true,\n            digits : 30,\n            type : 'eng',\n            element : 'text'\n        },\n        tableColumnType: {\n            name : 'コラム - タイプ',\n            required : true,\n            element : 'select'\n        },\n        tableColumnDigits: {\n            name : 'コラム - 桁数',\n            required : 'condition',\n            requiredCondition : function(columnType){\n                if(columnType === ''){\n                    return true;\n                }else{\n                    return false;\n                }\n            },\n            type : 'number',\n            digits : 4,\n            element : 'text'\n        },\n        tableColumnIsPk: {\n            element : 'checkbox'\n        },\n        tableColumnIsFk: {\n            element : 'checkbox'\n        },\n        tableColumnIsNn: {\n            element : 'checkbox'\n        },\n        tableColumnIsAi: {\n            element : 'checkbox'\n        },\n        tableColumnDefault: {\n            name: 'コラム - デフォルト',\n            digits : 40,\n            element : 'text'\n        }\n    }\n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}