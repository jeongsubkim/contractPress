{"ast":null,"code":"/**\n * {\n *  name : 日本語名\n *  required : 必須項目\n *  requiredCondition : 条件府必須項目の関数\n *  nullMsg : nullの場合のエラーメッセージ\n *  type : バリデーションタイプ\n *  typeErrMsg : typeエラーの場合のエラーメッセージ\n *  digits : 桁数\n *  digitsErrMsg : 桁数エラーの場合のエラーメッセージ\n *  element : 入力エレメント(select, text, checkbox, radio, textarea)\n *  isChild : 下部オブジェクト\n *  excludeBlank : 下部オブジェクトの値が何もない場合除外\n * }\n */\n\nexport const ErrorCollector = {\n  init: function (structure) {\n    var result = {};\n    // Object.keys(structure).forEach(function(key){\n    //     var isParent = structure[key];\n    //     if(isParent === 'parent'){\n    //         result[key] = ErrorCollector.makeValidObject(key);\n    //     }else{\n    //         var childBean = ErrorCollector.makeValidObject(key);\n    Object.keys(childBean).forEach(function (childKey) {\n      result[structure[key]][key][childKey] = childBean[childKey];\n    });\n    //     }\n    // })\n    // console.log(result)\n    for (var i = 0; i < structure.length; i++) {\n      result[structure[i]] = ErrorCollector.makeValidObject(structure[i]);\n    }\n    console.log(result);\n    return result;\n  },\n  makeValidObject: function (beanName) {\n    var bean = this[beanName];\n    Object.keys(bean).forEach(function (key) {\n      var newBean = bean[key];\n      var endingWord = '';\n      var typeWord = '';\n      //set child bean\n      if (newBean.isChild) {\n        var childBean = ErrorCollector.makeValidObject(newBean.isChild);\n        Object.keys(childBean).forEach(function (childKey) {\n          bean[key][childKey] = childBean[childKey];\n        });\n        console.log(childBean);\n      }\n      //set ending word\n      if (newBean.element === 'text') {\n        endingWord = '入力してください。';\n      } else if (newBean.element === 'select' || newBean.element === 'radio') {\n        endingWord = '選択してください。';\n      } else if (newBean.element === 'checkbox') {\n        endingWord = 'チェックしてください。';\n      }\n      //set nullMsg\n      if (newBean.required === 'condition') {} else if (newBean.required) {\n        newBean.nullMsg = newBean.name + 'を' + endingWord;\n      }\n      //set typeErrMsg\n      if (newBean.type) {\n        if (newBean.type === 'eng') {\n          typeWord = '英語で';\n        } else if (newBean.type === 'number') {\n          typeWord = '数字で';\n        }\n        newBean.typeErrMsg = newBean.name + 'は' + typeWord + endingWord;\n      }\n      //set digitErrMsg\n      if (newBean.digits) {\n        newBean.digitsErrMsg = newBean.name + 'は' + newBean.digits + '桁以内で' + endingWord;\n      }\n      bean[key] = newBean;\n    });\n    return bean;\n  },\n  MTable: {\n    tableName: {\n      name: 'テーブル名 - 論理名',\n      required: true,\n      digits: 30,\n      element: 'text'\n    },\n    tableNameJp: {\n      name: 'テーブル名 - 物理名',\n      required: true,\n      type: 'eng',\n      digits: 30,\n      element: 'text'\n    },\n    tableComment: {\n      name: 'コメント',\n      digits: 80,\n      element: 'text'\n    },\n    MTableColumn: {\n      isChild: 'MTableColumn',\n      excludeBlank: true\n    }\n  },\n  MTableColumn: {\n    tableColumnName: {\n      name: 'コラム - 論理名',\n      required: true,\n      digits: 30,\n      element: 'text'\n    },\n    tableColumnNameJp: {\n      name: 'コラム - 物理名',\n      required: true,\n      digits: 30,\n      type: 'eng',\n      element: 'text'\n    },\n    tableColumnType: {\n      name: 'コラム - タイプ',\n      required: true,\n      element: 'select'\n    },\n    tableColumnDigits: {\n      name: 'コラム - 桁数',\n      required: 'condition',\n      requiredCondition: function (columnType) {\n        if (columnType === '') {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      requiredConditionParameter: 'tableColumnType',\n      type: 'number',\n      digits: 4,\n      element: 'text'\n    },\n    tableColumnIsPk: {\n      element: 'checkbox'\n    },\n    tableColumnIsFk: {\n      element: 'checkbox'\n    },\n    tableColumnIsNn: {\n      element: 'checkbox'\n    },\n    tableColumnIsAi: {\n      element: 'checkbox'\n    },\n    tableColumnDefault: {\n      name: 'コラム - デフォルト',\n      digits: 40,\n      element: 'text'\n    }\n  }\n};","map":{"version":3,"names":["ErrorCollector","init","structure","result","Object","keys","childBean","forEach","childKey","key","i","length","makeValidObject","console","log","beanName","bean","newBean","endingWord","typeWord","isChild","element","required","nullMsg","name","type","typeErrMsg","digits","digitsErrMsg","MTable","tableName","tableNameJp","tableComment","MTableColumn","excludeBlank","tableColumnName","tableColumnNameJp","tableColumnType","tableColumnDigits","requiredCondition","columnType","requiredConditionParameter","tableColumnIsPk","tableColumnIsFk","tableColumnIsNn","tableColumnIsAi","tableColumnDefault"],"sources":["C:/Users/N22082302/react-cap/jstest/react/cap-react/src/admin/common/ErrorCollector.js"],"sourcesContent":["/**\n * {\n *  name : 日本語名\n *  required : 必須項目\n *  requiredCondition : 条件府必須項目の関数\n *  nullMsg : nullの場合のエラーメッセージ\n *  type : バリデーションタイプ\n *  typeErrMsg : typeエラーの場合のエラーメッセージ\n *  digits : 桁数\n *  digitsErrMsg : 桁数エラーの場合のエラーメッセージ\n *  element : 入力エレメント(select, text, checkbox, radio, textarea)\n *  isChild : 下部オブジェクト\n *  excludeBlank : 下部オブジェクトの値が何もない場合除外\n * }\n */\n\nexport const ErrorCollector = {\n    init : function(structure){\n        var result = {};\n        // Object.keys(structure).forEach(function(key){\n        //     var isParent = structure[key];\n        //     if(isParent === 'parent'){\n        //         result[key] = ErrorCollector.makeValidObject(key);\n        //     }else{\n        //         var childBean = ErrorCollector.makeValidObject(key);\n                Object.keys(childBean).forEach(function(childKey){\n                    result[structure[key]][key][childKey] = childBean[childKey];\n                })\n        //     }\n        // })\n        // console.log(result)\n        for(var i = 0; i < structure.length; i++){\n            result[structure[i]] = ErrorCollector.makeValidObject(structure[i]);\n        }\n        console.log(result);\n        return result;\n    },\n    makeValidObject : function(beanName){\n        var bean = this[beanName];\n        Object.keys(bean).forEach(function(key){\n            var newBean = bean[key];\n            var endingWord = '';\n            var typeWord = '';\n            //set child bean\n            if(newBean.isChild){\n                var childBean = ErrorCollector.makeValidObject(newBean.isChild);\n                Object.keys(childBean).forEach(function(childKey){\n                    bean[key][childKey] = childBean[childKey];\n                })\n                console.log(childBean);\n            }\n            //set ending word\n            if(newBean.element === 'text'){\n                endingWord = '入力してください。';\n            }else if(newBean.element === 'select' || newBean.element === 'radio'){\n                endingWord = '選択してください。';\n            }else if(newBean.element === 'checkbox'){\n                endingWord = 'チェックしてください。';\n            }\n            //set nullMsg\n            if(newBean.required === 'condition'){\n\n            }else if(newBean.required){\n                newBean.nullMsg = newBean.name + 'を' + endingWord;\n            }\n            //set typeErrMsg\n            if(newBean.type){\n                if(newBean.type === 'eng'){\n                    typeWord = '英語で';\n                }else if(newBean.type === 'number'){\n                    typeWord = '数字で';\n                }\n                newBean.typeErrMsg = newBean.name + 'は' + typeWord + endingWord;\n            }\n            //set digitErrMsg\n            if(newBean.digits){\n                newBean.digitsErrMsg = newBean.name + 'は' + newBean.digits + '桁以内で' + endingWord;\n            }\n            bean[key] = newBean;\n        })\n        return bean;\n    },\n    MTable : {\n        tableName : {\n            name : 'テーブル名 - 論理名',\n            required : true,\n            digits : 30,\n            element : 'text'\n        },\n        tableNameJp : {\n            name : 'テーブル名 - 物理名',\n            required : true,\n            type : 'eng',\n            digits : 30,\n            element : 'text'\n        },\n        tableComment : {\n            name : 'コメント',\n            digits : 80,\n            element : 'text'\n        },\n        MTableColumn : {\n            isChild : 'MTableColumn',\n            excludeBlank : true\n        }\n    },\n    MTableColumn : {\n        tableColumnName: {\n            name : 'コラム - 論理名',\n            required : true,\n            digits : 30,\n            element : 'text'\n        },\n        tableColumnNameJp: {\n            name : 'コラム - 物理名',\n            required : true,\n            digits : 30,\n            type : 'eng',\n            element : 'text'\n        },\n        tableColumnType: {\n            name : 'コラム - タイプ',\n            required : true,\n            element : 'select'\n        },\n        tableColumnDigits: {\n            name : 'コラム - 桁数',\n            required : 'condition',\n            requiredCondition : function(columnType){\n                if(columnType === ''){\n                    return true;\n                }else{\n                    return false;\n                }\n            },\n            requiredConditionParameter : 'tableColumnType',\n            type : 'number',\n            digits : 4,\n            element : 'text'\n        },\n        tableColumnIsPk: {\n            element : 'checkbox'\n        },\n        tableColumnIsFk: {\n            element : 'checkbox'\n        },\n        tableColumnIsNn: {\n            element : 'checkbox'\n        },\n        tableColumnIsAi: {\n            element : 'checkbox'\n        },\n        tableColumnDefault: {\n            name: 'コラム - デフォルト',\n            digits : 40,\n            element : 'text'\n        }\n    }\n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}