{"ast":null,"code":"/**\n * {\n *  name : 日本語名\n *  required : 必須項目\n *  requiredCondition : 条件府必須項目の関数\n *  nullMsg : nullの場合のエラーメッセージ\n *  type : バリデーションタイプ\n *  typeErrMsg : typeエラーの場合のエラーメッセージ\n *  digits : 桁数\n *  digitsErrMsg : 桁数エラーの場合のエラーメッセージ\n *  element : 入力エレメント(select, text, checkbox, radio, textarea)\n *  isChild : 下部オブジェクト\n *  excludeBlank : 下部オブジェクトの値が何もない場合除外\n * }\n */\n\nexport const ErrorCollector = {\n  init: function (structure) {\n    var result = {};\n    for (var i = 0; i < structure.length; i++) {\n      result[structure[i]] = ErrorCollector.makeValidObject(structure[i]);\n    }\n    return result;\n  },\n  makeValidObject: function (beanName) {\n    var bean = this[beanName];\n    Object.keys(bean).forEach(function (key) {\n      var newBean = bean[key];\n      var endingWord = '';\n      var typeWord = '';\n      //set child bean\n      if (newBean.isChild) {\n        var childBean = ErrorCollector.makeValidObject(newBean.isChild);\n        Object.keys(childBean).forEach(function (childKey) {\n          bean[key][childKey] = childBean[childKey];\n        });\n      }\n      //set ending word\n      if (newBean.element === 'text') {\n        endingWord = '入力してください。';\n      } else if (newBean.element === 'select' || newBean.element === 'radio') {\n        endingWord = '選択してください。';\n      } else if (newBean.element === 'checkbox') {\n        endingWord = 'チェックしてください。';\n      }\n      //set nullMsg\n      if (newBean.required === 'condition') {} else if (newBean.required || newBean.required === 'condition') {\n        newBean.nullMsg = newBean.name + 'を' + endingWord;\n      }\n      //set typeErrMsg\n      if (newBean.type) {\n        if (newBean.type === 'eng') {\n          typeWord = '英語で';\n        } else if (newBean.type === 'number') {\n          typeWord = '数字で';\n        }\n        newBean.typeErrMsg = newBean.name + 'は' + typeWord + endingWord;\n      }\n      //set digitErrMsg\n      if (newBean.digits) {\n        newBean.digitsErrMsg = newBean.name + 'は' + newBean.digits + '桁以内で' + endingWord;\n      }\n      bean[key] = newBean;\n    });\n    return bean;\n  },\n  MTable: {\n    tableName: {\n      name: '論理名',\n      required: true,\n      digits: 30,\n      element: 'text'\n    },\n    tableNameJp: {\n      name: '物理名',\n      required: true,\n      type: 'eng',\n      digits: 30,\n      element: 'text'\n    },\n    tableComment: {\n      name: 'コメント',\n      digits: 80,\n      element: 'text'\n    },\n    MTableColumn: {\n      isChild: 'MTableColumn'\n    }\n  },\n  MTableColumn: {\n    tableColumnName: {\n      name: '論理名',\n      required: true,\n      digits: 30,\n      element: 'text'\n    },\n    tableColumnNameJp: {\n      name: '物理名',\n      required: true,\n      digits: 30,\n      type: 'eng',\n      element: 'text'\n    },\n    tableColumnType: {\n      name: 'タイプ',\n      required: true,\n      element: 'select'\n    },\n    tableColumnDigits: {\n      name: '桁数',\n      required: 'condition',\n      type: 'number',\n      digits: 4,\n      element: 'text'\n    },\n    tableColumnIsPk: {\n      element: 'checkbox'\n    },\n    tableColumnIsFk: {\n      element: 'checkbox'\n    },\n    tableColumnIsNn: {\n      element: 'checkbox'\n    },\n    tableColumnIsAi: {\n      element: 'checkbox'\n    },\n    tableColumnDefault: {\n      name: 'デフォルト',\n      digits: 40,\n      element: 'text'\n    }\n  }\n};","map":{"version":3,"names":["ErrorCollector","init","structure","result","i","length","makeValidObject","beanName","bean","Object","keys","forEach","key","newBean","endingWord","typeWord","isChild","childBean","childKey","element","required","nullMsg","name","type","typeErrMsg","digits","digitsErrMsg","MTable","tableName","tableNameJp","tableComment","MTableColumn","tableColumnName","tableColumnNameJp","tableColumnType","tableColumnDigits","tableColumnIsPk","tableColumnIsFk","tableColumnIsNn","tableColumnIsAi","tableColumnDefault"],"sources":["C:/Users/N22082302/react-cap/jstest/react/cap-react/src/admin/common/ErrorCollector.js"],"sourcesContent":["/**\n * {\n *  name : 日本語名\n *  required : 必須項目\n *  requiredCondition : 条件府必須項目の関数\n *  nullMsg : nullの場合のエラーメッセージ\n *  type : バリデーションタイプ\n *  typeErrMsg : typeエラーの場合のエラーメッセージ\n *  digits : 桁数\n *  digitsErrMsg : 桁数エラーの場合のエラーメッセージ\n *  element : 入力エレメント(select, text, checkbox, radio, textarea)\n *  isChild : 下部オブジェクト\n *  excludeBlank : 下部オブジェクトの値が何もない場合除外\n * }\n */\n\nexport const ErrorCollector = {\n    init : function(structure){\n        var result = {};\n        for(var i = 0; i < structure.length; i++){\n            result[structure[i]] = ErrorCollector.makeValidObject(structure[i]);\n        }\n        return result;\n    },\n    makeValidObject : function(beanName){\n        var bean = this[beanName];\n        Object.keys(bean).forEach(function(key){\n            var newBean = bean[key];\n            var endingWord = '';\n            var typeWord = '';\n            //set child bean\n            if(newBean.isChild){\n                var childBean = ErrorCollector.makeValidObject(newBean.isChild);\n                Object.keys(childBean).forEach(function(childKey){\n                    bean[key][childKey] = childBean[childKey];\n                })\n            }\n            //set ending word\n            if(newBean.element === 'text'){\n                endingWord = '入力してください。';\n            }else if(newBean.element === 'select' || newBean.element === 'radio'){\n                endingWord = '選択してください。';\n            }else if(newBean.element === 'checkbox'){\n                endingWord = 'チェックしてください。';\n            }\n            //set nullMsg\n            if(newBean.required === 'condition'){\n\n            }else if(newBean.required || newBean.required === 'condition'){\n                newBean.nullMsg = newBean.name + 'を' + endingWord;\n            }\n            //set typeErrMsg\n            if(newBean.type){\n                if(newBean.type === 'eng'){\n                    typeWord = '英語で';\n                }else if(newBean.type === 'number'){\n                    typeWord = '数字で';\n                }\n                newBean.typeErrMsg = newBean.name + 'は' + typeWord + endingWord;\n            }\n            //set digitErrMsg\n            if(newBean.digits){\n                newBean.digitsErrMsg = newBean.name + 'は' + newBean.digits + '桁以内で' + endingWord;\n            }\n            bean[key] = newBean;\n        })\n        return bean;\n    },\n    MTable : {\n        tableName : {\n            name : '論理名',\n            required : true,\n            digits : 30,\n            element : 'text'\n        },\n        tableNameJp : {\n            name : '物理名',\n            required : true,\n            type : 'eng',\n            digits : 30,\n            element : 'text'\n        },\n        tableComment : {\n            name : 'コメント',\n            digits : 80,\n            element : 'text'\n        },\n        MTableColumn : {\n            isChild : 'MTableColumn'\n        }\n    },\n    MTableColumn : {\n        tableColumnName: {\n            name : '論理名',\n            required : true,\n            digits : 30,\n            element : 'text'\n        },\n        tableColumnNameJp: {\n            name : '物理名',\n            required : true,\n            digits : 30,\n            type : 'eng',\n            element : 'text'\n        },\n        tableColumnType: {\n            name : 'タイプ',\n            required : true,\n            element : 'select'\n        },\n        tableColumnDigits: {\n            name : '桁数',\n            required : 'condition',\n            type : 'number',\n            digits : 4,\n            element : 'text'\n        },\n        tableColumnIsPk: {\n            element : 'checkbox'\n        },\n        tableColumnIsFk: {\n            element : 'checkbox'\n        },\n        tableColumnIsNn: {\n            element : 'checkbox'\n        },\n        tableColumnIsAi: {\n            element : 'checkbox'\n        },\n        tableColumnDefault: {\n            name: 'デフォルト',\n            digits : 40,\n            element : 'text'\n        }\n    }\n    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}